// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: proto/scheduler.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PrimeReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Num           int32                  `protobuf:"varint,1,opt,name=Num,proto3" json:"Num,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrimeReq) Reset() {
	*x = PrimeReq{}
	mi := &file_proto_scheduler_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrimeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrimeReq) ProtoMessage() {}

func (x *PrimeReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scheduler_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrimeReq.ProtoReflect.Descriptor instead.
func (*PrimeReq) Descriptor() ([]byte, []int) {
	return file_proto_scheduler_proto_rawDescGZIP(), []int{0}
}

func (x *PrimeReq) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

type PrimeRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PrimeList     []int32                `protobuf:"varint,1,rep,packed,name=PrimeList,proto3" json:"PrimeList,omitempty"`
	ProcessedBy   string                 `protobuf:"bytes,2,opt,name=ProcessedBy,proto3" json:"ProcessedBy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrimeRes) Reset() {
	*x = PrimeRes{}
	mi := &file_proto_scheduler_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrimeRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrimeRes) ProtoMessage() {}

func (x *PrimeRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scheduler_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrimeRes.ProtoReflect.Descriptor instead.
func (*PrimeRes) Descriptor() ([]byte, []int) {
	return file_proto_scheduler_proto_rawDescGZIP(), []int{1}
}

func (x *PrimeRes) GetPrimeList() []int32 {
	if x != nil {
		return x.PrimeList
	}
	return nil
}

func (x *PrimeRes) GetProcessedBy() string {
	if x != nil {
		return x.ProcessedBy
	}
	return ""
}

type HeartbeatReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatReq) Reset() {
	*x = HeartbeatReq{}
	mi := &file_proto_scheduler_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatReq) ProtoMessage() {}

func (x *HeartbeatReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scheduler_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatReq.ProtoReflect.Descriptor instead.
func (*HeartbeatReq) Descriptor() ([]byte, []int) {
	return file_proto_scheduler_proto_rawDescGZIP(), []int{2}
}

type HeartbeatRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsAlive       bool                   `protobuf:"varint,1,opt,name=IsAlive,proto3" json:"IsAlive,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatRes) Reset() {
	*x = HeartbeatRes{}
	mi := &file_proto_scheduler_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRes) ProtoMessage() {}

func (x *HeartbeatRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scheduler_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRes.ProtoReflect.Descriptor instead.
func (*HeartbeatRes) Descriptor() ([]byte, []int) {
	return file_proto_scheduler_proto_rawDescGZIP(), []int{3}
}

func (x *HeartbeatRes) GetIsAlive() bool {
	if x != nil {
		return x.IsAlive
	}
	return false
}

type RegisterReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkerID      string                 `protobuf:"bytes,1,opt,name=WorkerID,proto3" json:"WorkerID,omitempty"`
	WorkerAddr    string                 `protobuf:"bytes,2,opt,name=WorkerAddr,proto3" json:"WorkerAddr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterReq) Reset() {
	*x = RegisterReq{}
	mi := &file_proto_scheduler_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterReq) ProtoMessage() {}

func (x *RegisterReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scheduler_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterReq.ProtoReflect.Descriptor instead.
func (*RegisterReq) Descriptor() ([]byte, []int) {
	return file_proto_scheduler_proto_rawDescGZIP(), []int{4}
}

func (x *RegisterReq) GetWorkerID() string {
	if x != nil {
		return x.WorkerID
	}
	return ""
}

func (x *RegisterReq) GetWorkerAddr() string {
	if x != nil {
		return x.WorkerAddr
	}
	return ""
}

type RegisterRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	Msg           string                 `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterRes) Reset() {
	*x = RegisterRes{}
	mi := &file_proto_scheduler_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRes) ProtoMessage() {}

func (x *RegisterRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scheduler_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRes.ProtoReflect.Descriptor instead.
func (*RegisterRes) Descriptor() ([]byte, []int) {
	return file_proto_scheduler_proto_rawDescGZIP(), []int{5}
}

func (x *RegisterRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ElectionReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SenderID      int32                  `protobuf:"varint,1,opt,name=SenderID,proto3" json:"SenderID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ElectionReq) Reset() {
	*x = ElectionReq{}
	mi := &file_proto_scheduler_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ElectionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ElectionReq) ProtoMessage() {}

func (x *ElectionReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scheduler_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ElectionReq.ProtoReflect.Descriptor instead.
func (*ElectionReq) Descriptor() ([]byte, []int) {
	return file_proto_scheduler_proto_rawDescGZIP(), []int{6}
}

func (x *ElectionReq) GetSenderID() int32 {
	if x != nil {
		return x.SenderID
	}
	return 0
}

type ElectionRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=Ok,proto3" json:"Ok,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ElectionRes) Reset() {
	*x = ElectionRes{}
	mi := &file_proto_scheduler_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ElectionRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ElectionRes) ProtoMessage() {}

func (x *ElectionRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scheduler_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ElectionRes.ProtoReflect.Descriptor instead.
func (*ElectionRes) Descriptor() ([]byte, []int) {
	return file_proto_scheduler_proto_rawDescGZIP(), []int{7}
}

func (x *ElectionRes) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type LeaderReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LeaderID      int32                  `protobuf:"varint,1,opt,name=LeaderID,proto3" json:"LeaderID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaderReq) Reset() {
	*x = LeaderReq{}
	mi := &file_proto_scheduler_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderReq) ProtoMessage() {}

func (x *LeaderReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scheduler_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderReq.ProtoReflect.Descriptor instead.
func (*LeaderReq) Descriptor() ([]byte, []int) {
	return file_proto_scheduler_proto_rawDescGZIP(), []int{8}
}

func (x *LeaderReq) GetLeaderID() int32 {
	if x != nil {
		return x.LeaderID
	}
	return 0
}

type LeaderRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ack           bool                   `protobuf:"varint,1,opt,name=Ack,proto3" json:"Ack,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaderRes) Reset() {
	*x = LeaderRes{}
	mi := &file_proto_scheduler_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaderRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderRes) ProtoMessage() {}

func (x *LeaderRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scheduler_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderRes.ProtoReflect.Descriptor instead.
func (*LeaderRes) Descriptor() ([]byte, []int) {
	return file_proto_scheduler_proto_rawDescGZIP(), []int{9}
}

func (x *LeaderRes) GetAck() bool {
	if x != nil {
		return x.Ack
	}
	return false
}

var File_proto_scheduler_proto protoreflect.FileDescriptor

const file_proto_scheduler_proto_rawDesc = "" +
	"\n" +
	"\x15proto/scheduler.proto\"\x1c\n" +
	"\bPrimeReq\x12\x10\n" +
	"\x03Num\x18\x01 \x01(\x05R\x03Num\"J\n" +
	"\bPrimeRes\x12\x1c\n" +
	"\tPrimeList\x18\x01 \x03(\x05R\tPrimeList\x12 \n" +
	"\vProcessedBy\x18\x02 \x01(\tR\vProcessedBy\"\x0e\n" +
	"\fHeartbeatReq\"(\n" +
	"\fHeartbeatRes\x12\x18\n" +
	"\aIsAlive\x18\x01 \x01(\bR\aIsAlive\"I\n" +
	"\vRegisterReq\x12\x1a\n" +
	"\bWorkerID\x18\x01 \x01(\tR\bWorkerID\x12\x1e\n" +
	"\n" +
	"WorkerAddr\x18\x02 \x01(\tR\n" +
	"WorkerAddr\"9\n" +
	"\vRegisterRes\x12\x18\n" +
	"\aSuccess\x18\x01 \x01(\bR\aSuccess\x12\x10\n" +
	"\x03Msg\x18\x02 \x01(\tR\x03Msg\")\n" +
	"\vElectionReq\x12\x1a\n" +
	"\bSenderID\x18\x01 \x01(\x05R\bSenderID\"\x1d\n" +
	"\vElectionRes\x12\x0e\n" +
	"\x02Ok\x18\x01 \x01(\bR\x02Ok\"'\n" +
	"\tLeaderReq\x12\x1a\n" +
	"\bLeaderID\x18\x01 \x01(\x05R\bLeaderID\"\x1d\n" +
	"\tLeaderRes\x12\x10\n" +
	"\x03Ack\x18\x01 \x01(\bR\x03Ack2/\n" +
	"\tScheduler\x12\"\n" +
	"\n" +
	"ListPrimes\x12\t.PrimeReq\x1a\t.PrimeRes2W\n" +
	"\x06Worker\x12\"\n" +
	"\n" +
	"ListPrimes\x12\t.PrimeReq\x1a\t.PrimeRes\x12)\n" +
	"\tHeartbeat\x12\r.HeartbeatReq\x1a\r.HeartbeatRes2>\n" +
	"\x0eLeaderRegistry\x12,\n" +
	"\x0eRegisterWorker\x12\f.RegisterReq\x1a\f.RegisterRes2a\n" +
	"\bElection\x12+\n" +
	"\rStartElection\x12\f.ElectionReq\x1a\f.ElectionRes\x12(\n" +
	"\x0eAnnounceLeader\x12\n" +
	".LeaderReq\x1a\n" +
	".LeaderResB\fZ\n" +
	"./proto;pbb\x06proto3"

var (
	file_proto_scheduler_proto_rawDescOnce sync.Once
	file_proto_scheduler_proto_rawDescData []byte
)

func file_proto_scheduler_proto_rawDescGZIP() []byte {
	file_proto_scheduler_proto_rawDescOnce.Do(func() {
		file_proto_scheduler_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_scheduler_proto_rawDesc), len(file_proto_scheduler_proto_rawDesc)))
	})
	return file_proto_scheduler_proto_rawDescData
}

var file_proto_scheduler_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_proto_scheduler_proto_goTypes = []any{
	(*PrimeReq)(nil),     // 0: PrimeReq
	(*PrimeRes)(nil),     // 1: PrimeRes
	(*HeartbeatReq)(nil), // 2: HeartbeatReq
	(*HeartbeatRes)(nil), // 3: HeartbeatRes
	(*RegisterReq)(nil),  // 4: RegisterReq
	(*RegisterRes)(nil),  // 5: RegisterRes
	(*ElectionReq)(nil),  // 6: ElectionReq
	(*ElectionRes)(nil),  // 7: ElectionRes
	(*LeaderReq)(nil),    // 8: LeaderReq
	(*LeaderRes)(nil),    // 9: LeaderRes
}
var file_proto_scheduler_proto_depIdxs = []int32{
	0, // 0: Scheduler.ListPrimes:input_type -> PrimeReq
	0, // 1: Worker.ListPrimes:input_type -> PrimeReq
	2, // 2: Worker.Heartbeat:input_type -> HeartbeatReq
	4, // 3: LeaderRegistry.RegisterWorker:input_type -> RegisterReq
	6, // 4: Election.StartElection:input_type -> ElectionReq
	8, // 5: Election.AnnounceLeader:input_type -> LeaderReq
	1, // 6: Scheduler.ListPrimes:output_type -> PrimeRes
	1, // 7: Worker.ListPrimes:output_type -> PrimeRes
	3, // 8: Worker.Heartbeat:output_type -> HeartbeatRes
	5, // 9: LeaderRegistry.RegisterWorker:output_type -> RegisterRes
	7, // 10: Election.StartElection:output_type -> ElectionRes
	9, // 11: Election.AnnounceLeader:output_type -> LeaderRes
	6, // [6:12] is the sub-list for method output_type
	0, // [0:6] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_scheduler_proto_init() }
func file_proto_scheduler_proto_init() {
	if File_proto_scheduler_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_scheduler_proto_rawDesc), len(file_proto_scheduler_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_proto_scheduler_proto_goTypes,
		DependencyIndexes: file_proto_scheduler_proto_depIdxs,
		MessageInfos:      file_proto_scheduler_proto_msgTypes,
	}.Build()
	File_proto_scheduler_proto = out.File
	file_proto_scheduler_proto_goTypes = nil
	file_proto_scheduler_proto_depIdxs = nil
}
